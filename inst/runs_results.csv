run_dir,eval_,metric_loss,metric_accuracy,metric_val_loss,metric_val_accuracy,flag_kernel_size1,flag_strides1,epochs,epochs_completed,metrics,model,loss_function,optimizer,learning_rate,script,start,end,completed,output,source_code,context,type,NA.
_tuning/2022-05-06T16-22-44Z,1.0288610458374,0.0321,0.9928,1.0289,0.8028,7,2,10,10,_tuning/2022-05-06T16-22-44Z/tfruns.d/metrics.json,"Model: ""sequential""
________________________________________________________________________________
Layer (type)                        Output Shape                    Param #     
================================================================================
embedding (Embedding)               (None, 30, 16)                  320016      
________________________________________________________________________________
conv1d (Conv1D)                     (None, 12, 32)                  3616        
________________________________________________________________________________
global_max_pooling1d (GlobalMaxPool (None, 32)                      0           
________________________________________________________________________________
dense_1 (Dense)                     (None, 64)                      2112        
________________________________________________________________________________
dense (Dense)                       (None, 1)                       65          
================================================================================
Total params: 325,809
Trainable params: 325,809
Non-trainable params: 0
________________________________________________________________________________",binary_crossentropy,<tensorflow.python.keras.optimizer_v2.adam.Adam>,0.00100000004749745,cnn-spec.R,2022-05-06T16:22:45Z,2022-05-06T16:23:32Z,TRUE,"
> library(keras)

> # Hyperparameter flags --------------------------------------------------------
> 
> FLAGS <- flags(
+   flag_integer(""kernel_size1"", 5),
+   flag_i .... [TRUNCATED] 

> # Define Model ----------------------------------------------------------------
> 
> model <- keras_model_sequential() %>%
+   layer_embedding(input .... [TRUNCATED] 

> model %>% compile(
+   optimizer = ""adam"",
+   loss = ""binary_crossentropy"",
+   metrics = c(""accuracy"")
+ )

> # Training & Evaluation ----------------------------------------------------
> 
> history <- model %>% fit(
+   x = kick_analysis, 
+   y = state_an .... [TRUNCATED] 

> plot(history)

> score <- model %>% evaluate(
+   kick_assess, state_assess
+ )

> cat(""Test accuracy:"", score[""accuracy""], ""\n"")
Test accuracy: 0.8028462 ",_tuning/2022-05-06T16-22-44Z/tfruns.d/source.tar.gz,local,training,0.802846193313599
_tuning/2022-05-06T16-21-47Z,1.00986909866333,0.0348,0.9925,1.0099,0.8096,5,2,10,10,_tuning/2022-05-06T16-21-47Z/tfruns.d/metrics.json,"Model: ""sequential""
________________________________________________________________________________
Layer (type)                        Output Shape                    Param #     
================================================================================
embedding (Embedding)               (None, 30, 16)                  320016      
________________________________________________________________________________
conv1d (Conv1D)                     (None, 13, 32)                  2592        
________________________________________________________________________________
global_max_pooling1d (GlobalMaxPool (None, 32)                      0           
________________________________________________________________________________
dense_1 (Dense)                     (None, 64)                      2112        
________________________________________________________________________________
dense (Dense)                       (None, 1)                       65          
================================================================================
Total params: 324,785
Trainable params: 324,785
Non-trainable params: 0
________________________________________________________________________________",binary_crossentropy,<tensorflow.python.keras.optimizer_v2.adam.Adam>,0.00100000004749745,cnn-spec.R,2022-05-06T16:21:48Z,2022-05-06T16:22:43Z,TRUE,"
> library(keras)

> # Hyperparameter flags --------------------------------------------------------
> 
> FLAGS <- flags(
+   flag_integer(""kernel_size1"", 5),
+   flag_i .... [TRUNCATED] 

> # Define Model ----------------------------------------------------------------
> 
> model <- keras_model_sequential() %>%
+   layer_embedding(input .... [TRUNCATED] 

> model %>% compile(
+   optimizer = ""adam"",
+   loss = ""binary_crossentropy"",
+   metrics = c(""accuracy"")
+ )

> # Training & Evaluation ----------------------------------------------------
> 
> history <- model %>% fit(
+   x = kick_analysis, 
+   y = state_an .... [TRUNCATED] 

> plot(history)

> score <- model %>% evaluate(
+   kick_assess, state_assess
+ )

> cat(""Test accuracy:"", score[""accuracy""], ""\n"")
Test accuracy: 0.8095757 ",_tuning/2022-05-06T16-21-47Z/tfruns.d/source.tar.gz,local,training,0.80957567691803
_tuning/2022-05-06T16-21-08Z,0.992249369621277,0.044,0.9891,0.9922,0.8044,3,2,10,10,_tuning/2022-05-06T16-21-08Z/tfruns.d/metrics.json,"Model: ""sequential""
________________________________________________________________________________
Layer (type)                        Output Shape                    Param #     
================================================================================
embedding (Embedding)               (None, 30, 16)                  320016      
________________________________________________________________________________
conv1d (Conv1D)                     (None, 14, 32)                  1568        
________________________________________________________________________________
global_max_pooling1d (GlobalMaxPool (None, 32)                      0           
________________________________________________________________________________
dense_1 (Dense)                     (None, 64)                      2112        
________________________________________________________________________________
dense (Dense)                       (None, 1)                       65          
================================================================================
Total params: 323,761
Trainable params: 323,761
Non-trainable params: 0
________________________________________________________________________________",binary_crossentropy,<tensorflow.python.keras.optimizer_v2.adam.Adam>,0.00100000004749745,cnn-spec.R,2022-05-06T16:21:09Z,2022-05-06T16:21:47Z,TRUE,"
> library(keras)

> # Hyperparameter flags --------------------------------------------------------
> 
> FLAGS <- flags(
+   flag_integer(""kernel_size1"", 5),
+   flag_i .... [TRUNCATED] 

> # Define Model ----------------------------------------------------------------
> 
> model <- keras_model_sequential() %>%
+   layer_embedding(input .... [TRUNCATED] 

> model %>% compile(
+   optimizer = ""adam"",
+   loss = ""binary_crossentropy"",
+   metrics = c(""accuracy"")
+ )

> # Training & Evaluation ----------------------------------------------------
> 
> history <- model %>% fit(
+   x = kick_analysis, 
+   y = state_an .... [TRUNCATED] 

> plot(history)

> score <- model %>% evaluate(
+   kick_assess, state_assess
+ )

> cat(""Test accuracy:"", score[""accuracy""], ""\n"")
Test accuracy: 0.8043504 ",_tuning/2022-05-06T16-21-08Z/tfruns.d/source.tar.gz,local,training,0.804350435733795
_tuning/2022-05-06T16-20-27Z,0.97170078754425,0.0286,0.9947,0.9717,0.8144,7,1,10,10,_tuning/2022-05-06T16-20-27Z/tfruns.d/metrics.json,"Model: ""sequential""
________________________________________________________________________________
Layer (type)                        Output Shape                    Param #     
================================================================================
embedding (Embedding)               (None, 30, 16)                  320016      
________________________________________________________________________________
conv1d (Conv1D)                     (None, 24, 32)                  3616        
________________________________________________________________________________
global_max_pooling1d (GlobalMaxPool (None, 32)                      0           
________________________________________________________________________________
dense_1 (Dense)                     (None, 64)                      2112        
________________________________________________________________________________
dense (Dense)                       (None, 1)                       65          
================================================================================
Total params: 325,809
Trainable params: 325,809
Non-trainable params: 0
________________________________________________________________________________",binary_crossentropy,<tensorflow.python.keras.optimizer_v2.adam.Adam>,0.00100000004749745,cnn-spec.R,2022-05-06T16:20:28Z,2022-05-06T16:21:08Z,TRUE,"
> library(keras)

> # Hyperparameter flags --------------------------------------------------------
> 
> FLAGS <- flags(
+   flag_integer(""kernel_size1"", 5),
+   flag_i .... [TRUNCATED] 

> # Define Model ----------------------------------------------------------------
> 
> model <- keras_model_sequential() %>%
+   layer_embedding(input .... [TRUNCATED] 

> model %>% compile(
+   optimizer = ""adam"",
+   loss = ""binary_crossentropy"",
+   metrics = c(""accuracy"")
+ )

> # Training & Evaluation ----------------------------------------------------
> 
> history <- model %>% fit(
+   x = kick_analysis, 
+   y = state_an .... [TRUNCATED] 

> plot(history)

> score <- model %>% evaluate(
+   kick_assess, state_assess
+ )

> cat(""Test accuracy:"", score[""accuracy""], ""\n"")
Test accuracy: 0.8143654 ",_tuning/2022-05-06T16-20-27Z/tfruns.d/source.tar.gz,local,training,0.814365446567535
_tuning/2022-05-06T16-19-47Z,0.924296796321869,0.037,0.9918,0.9243,0.8148,5,1,10,10,_tuning/2022-05-06T16-19-47Z/tfruns.d/metrics.json,"Model: ""sequential""
________________________________________________________________________________
Layer (type)                        Output Shape                    Param #     
================================================================================
embedding (Embedding)               (None, 30, 16)                  320016      
________________________________________________________________________________
conv1d (Conv1D)                     (None, 26, 32)                  2592        
________________________________________________________________________________
global_max_pooling1d (GlobalMaxPool (None, 32)                      0           
________________________________________________________________________________
dense_1 (Dense)                     (None, 64)                      2112        
________________________________________________________________________________
dense (Dense)                       (None, 1)                       65          
================================================================================
Total params: 324,785
Trainable params: 324,785
Non-trainable params: 0
________________________________________________________________________________",binary_crossentropy,<tensorflow.python.keras.optimizer_v2.adam.Adam>,0.00100000004749745,cnn-spec.R,2022-05-06T16:19:48Z,2022-05-06T16:20:27Z,TRUE,"
> library(keras)

> # Hyperparameter flags --------------------------------------------------------
> 
> FLAGS <- flags(
+   flag_integer(""kernel_size1"", 5),
+   flag_i .... [TRUNCATED] 

> # Define Model ----------------------------------------------------------------
> 
> model <- keras_model_sequential() %>%
+   layer_embedding(input .... [TRUNCATED] 

> model %>% compile(
+   optimizer = ""adam"",
+   loss = ""binary_crossentropy"",
+   metrics = c(""accuracy"")
+ )

> # Training & Evaluation ----------------------------------------------------
> 
> history <- model %>% fit(
+   x = kick_analysis, 
+   y = state_an .... [TRUNCATED] 

> plot(history)

> score <- model %>% evaluate(
+   kick_assess, state_assess
+ )

> cat(""Test accuracy:"", score[""accuracy""], ""\n"")
Test accuracy: 0.8147613 ",_tuning/2022-05-06T16-19-47Z/tfruns.d/source.tar.gz,local,training,0.814761281013489
_tuning/2022-05-06T16-19-07Z,0.966532289981842,0.0414,0.9904,0.9665,0.8102,3,1,10,10,_tuning/2022-05-06T16-19-07Z/tfruns.d/metrics.json,"Model: ""sequential_1""
________________________________________________________________________________
Layer (type)                        Output Shape                    Param #     
================================================================================
embedding (Embedding)               (None, 30, 16)                  320016      
________________________________________________________________________________
conv1d (Conv1D)                     (None, 28, 32)                  1568        
________________________________________________________________________________
global_max_pooling1d (GlobalMaxPool (None, 32)                      0           
________________________________________________________________________________
dense_1 (Dense)                     (None, 64)                      2112        
________________________________________________________________________________
dense (Dense)                       (None, 1)                       65          
================================================================================
Total params: 323,761
Trainable params: 323,761
Non-trainable params: 0
________________________________________________________________________________",binary_crossentropy,<tensorflow.python.keras.optimizer_v2.adam.Adam>,0.00100000004749745,cnn-spec.R,2022-05-06T16:19:10Z,2022-05-06T16:19:47Z,TRUE,"
> library(keras)

> # Hyperparameter flags --------------------------------------------------------
> 
> FLAGS <- flags(
+   flag_integer(""kernel_size1"", 5),
+   flag_i .... [TRUNCATED] 

> # Define Model ----------------------------------------------------------------
> 
> model <- keras_model_sequential() %>%
+   layer_embedding(input .... [TRUNCATED] 

> model %>% compile(
+   optimizer = ""adam"",
+   loss = ""binary_crossentropy"",
+   metrics = c(""accuracy"")
+ )

> # Training & Evaluation ----------------------------------------------------
> 
> history <- model %>% fit(
+   x = kick_analysis, 
+   y = state_an .... [TRUNCATED] 

> plot(history)

> score <- model %>% evaluate(
+   kick_assess, state_assess
+ )

> cat(""Test accuracy:"", score[""accuracy""], ""\n"")
Test accuracy: 0.810209 ",_tuning/2022-05-06T16-19-07Z/tfruns.d/source.tar.gz,local,training,0.810209035873413
