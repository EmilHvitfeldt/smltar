on:
  push:
    branches:
      - main
      - master

name: bookdown

jobs:
  build:
    runs-on: ubuntu-18.04
    env:
      RSPM: "https://packagemanager.rstudio.com/cran/__linux__/bionic/latest"
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Setup R
        uses: r-lib/actions/setup-r@master

      - name: Install pandoc and pandoc citeproc
        uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ubuntu-18.04-${{ hashFiles('.github/R-version') }}-2-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ubuntu-18.04-${{ hashFiles('.github/R-version') }}-2-

      - name: Cache bookdown results
        uses: actions/cache@v1
        with:
          path: _bookdown_files
          key: bookdown-${{ hashFiles('**/*Rmd') }}
          restore-keys: bookdown-

      - name: Install system dependencies
        run: |
          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'cat(remotes::system_requirements("ubuntu", "18.04"), sep = "\n")')
      - name: Install packages
        run: |
          R -e 'remotes::install_deps(dependencies = TRUE)'
      - name: Install spacy + tensorflow
        run: |
          remotes::install_github('rstudio/reticulate')
          reticulate::install_miniconda()
          reticulate::conda_create('r-reticulate', packages = c('python==3.6.9'))
          keras::install_keras(tensorflow = '2.2', extra_packages = c('IPython', 'requests', 'certifi', 'urllib3'))
          spacyr::spacy_install(prompt = FALSE)
        shell: Rscript {0}  
          
      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Configure Git user
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
      - name: Build site
        run: Rscript -e 'bookdown::render_book("index.Rmd", quiet = FALSE)'

      - name: Install npm
        uses: actions/setup-node@v1
        
      - name: Deploy to Netlify
        # NETLIFY_AUTH_TOKEN added in the repo's secrets
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: |
          npm install netlify-cli -g
          netlify link --name smltar
          netlify deploy --prod --dir docs
