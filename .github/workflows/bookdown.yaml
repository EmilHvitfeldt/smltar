on:
  push:
    branches: master

jobs:
  build:
    runs-on: macOS-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Setup R
        uses: r-lib/actions/setup-r@master

      - name: Install pandoc and pandoc citeproc
        uses: r-lib/actions/setup-pandoc@master
        
      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-2-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-2-

      - name: Cache bookdown results
        uses: actions/cache@v1
        with:
          path: _bookdown_files
          key: bookdown-${{ hashFiles('**/*Rmd') }}
          restore-keys: bookdown-

      - name: Install packages
        run: |
          R -e 'remotes::install_deps(dependencies = TRUE)'

      - name: Install spacy + tensorflow
        run: |
          Rscript -e "reticulate::install_miniconda()"
          echo "options(reticulate.conda_binary = reticulate:::miniconda_conda())" >> .Rprofile
          Rscript -e "reticulate::conda_create('r-reticulate', packages = 'python==3.6.9')"
          Rscript -e "spacyr::spacy_install(prompt = FALSE)"
          Rscript -e "tensorflow::install_tensorflow(version='1.14.0')"
          
      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Configure Git user
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
      - name: Build site
        run: Rscript -e 'bookdown::render_book("index.Rmd", quiet = TRUE)'

      - name: Install npm
        uses: actions/setup-node@v1
        
      - name: Deploy to Netlify
        # NETLIFY_AUTH_TOKEN added in the repo's secrets
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        run: |
          npm install netlify-cli -g
          netlify link --name smltar
          netlify deploy --prod --dir docs
